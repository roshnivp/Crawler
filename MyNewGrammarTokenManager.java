/* Generated By:JavaCC: Do not edit this line. MyNewGrammarTokenManager.java */
package com.sjsu.crawler.parsergrammar;
import java.io.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Date;
import java.text.SimpleDateFormat;
import org.apache.commons.lang.StringEscapeUtils;

/** Token Manager. */
public class MyNewGrammarTokenManager implements MyNewGrammarConstants
{
    static int TagNestingDepth = 0 ;

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjMoveStringLiteralDfa0_0()
{
   return jjMoveNfa_0(1, 0);
}
static final long[] jjbitVec0 = {
   0x2000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec1 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec3 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 21;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0xafffffff00000000L & l) != 0L)
                  {
                     if (kind > 3)
                        kind = 3;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 60)
                     jjAddStates(0, 5);
                  break;
               case 0:
                  if ((0xafffffff00000000L & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(0);
                  break;
               case 3:
                  if ((0xbfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 4:
               case 8:
                  if (curChar == 62 && kind > 2)
                     kind = 2;
                  break;
               case 6:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(7, 4);
                  break;
               case 7:
                  if ((0xbfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(7, 4);
                  break;
               case 18:
                  if (curChar == 32)
                     jjCheckNAddTwoStates(19, 4);
                  break;
               case 19:
                  if ((0xbfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(19, 4);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x7fffffe2fffffffL & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if (curChar == 112)
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 3:
                  jjCheckNAddTwoStates(3, 4);
                  break;
               case 5:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 7:
                  jjCheckNAddTwoStates(7, 4);
                  break;
               case 9:
                  if (curChar == 101)
                     jjCheckNAdd(8);
                  break;
               case 10:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 103 && kind > 2)
                     kind = 2;
                  break;
               case 15:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 97)
                     jjCheckNAdd(8);
                  break;
               case 19:
                  jjCheckNAddTwoStates(19, 4);
                  break;
               case 20:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(0);
                  break;
               case 3:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(3, 4);
                  break;
               case 7:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(7, 4);
                  break;
               case 19:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(19, 4);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 21 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x10L) != 0L)
            return 176;
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 13:
         jjmatchedKind = 7;
         return jjMoveStringLiteralDfa1_1(0x100L);
      case 32:
         return jjStartNfaWithStates_1(0, 4, 176);
      default :
         return jjMoveNfa_1(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 10:
         if ((active0 & 0x100L) != 0L)
            return jjStopAtPos(1, 8);
         break;
      default :
         break;
   }
   return jjStartNfa_1(0, active0);
}
private int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 176;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 176:
               case 5:
                  if ((0xafffffff00000000L & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAddTwoStates(5, 6);
                  break;
               case 1:
                  if ((0xafffffff00000000L & l) != 0L)
                  {
                     if (kind > 13)
                        kind = 13;
                     jjCheckNAddTwoStates(5, 6);
                  }
                  else if (curChar == 60)
                     jjAddStates(6, 44);
                  else if (curChar == 62)
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if (curChar == 60)
                     jjCheckNAddStates(45, 47);
                  break;
               case 0:
               case 87:
                  if (curChar == 62 && kind > 11)
                     kind = 11;
                  break;
               case 2:
                  if ((0xafffffff00000000L & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 4:
                  if (curChar == 62 && kind > 12)
                     kind = 12;
                  break;
               case 9:
                  if (curChar == 60)
                     jjAddStates(6, 44);
                  break;
               case 11:
                  if ((0xbfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(11, 12);
                  break;
               case 12:
               case 21:
                  if (curChar == 62 && kind > 10)
                     kind = 10;
                  break;
               case 14:
                  if ((0xbfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(14, 12);
                  break;
               case 16:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(17, 12);
                  break;
               case 17:
                  if ((0xbfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(17, 12);
                  break;
               case 89:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 91:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 93:
                  if ((0x3fe000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 0;
                  break;
               case 94:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 96:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 99:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 101:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 107:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 111:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 122:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 129:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 133:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 137:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 141:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 145:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 150:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 157:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 162:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 169:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 175:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 176:
                  if ((0x7fffffffffffffffL & l) != 0L)
                  {
                     if (kind > 13)
                        kind = 13;
                     jjCheckNAddTwoStates(5, 6);
                  }
                  else if (curChar == 127)
                  {
                     if (kind > 13)
                        kind = 13;
                     jjCheckNAddTwoStates(5, 6);
                  }
                  break;
               case 1:
                  if ((0x7fffffffffffffffL & l) != 0L)
                  {
                     if (kind > 13)
                        kind = 13;
                     jjCheckNAddTwoStates(5, 6);
                  }
                  else if (curChar == 127)
                  {
                     if (kind > 13)
                        kind = 13;
                     jjCheckNAddStates(48, 50);
                  }
                  break;
               case 2:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 3:
                  if (curChar == 127)
                     jjCheckNAddStates(45, 47);
                  break;
               case 5:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAddTwoStates(5, 6);
                  break;
               case 6:
                  if (curChar != 127)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAddTwoStates(5, 6);
                  break;
               case 7:
                  if (curChar != 127)
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAddStates(48, 50);
                  break;
               case 8:
                  if (curChar != 127)
                     break;
                  if (kind > 14)
                     kind = 14;
                  jjCheckNAdd(8);
                  break;
               case 10:
                  if (curChar == 112)
                     jjCheckNAddTwoStates(11, 12);
                  break;
               case 11:
                  jjCheckNAddTwoStates(11, 12);
                  break;
               case 13:
                  if (curChar == 97)
                     jjCheckNAddTwoStates(14, 12);
                  break;
               case 14:
                  jjCheckNAddTwoStates(14, 12);
                  break;
               case 15:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 17:
                  jjCheckNAddTwoStates(17, 12);
                  break;
               case 18:
                  if (curChar == 103 && kind > 10)
                     kind = 10;
                  break;
               case 19:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 22:
               case 50:
                  if (curChar == 98)
                     jjCheckNAdd(21);
                  break;
               case 23:
                  if (curChar == 109)
                     jjCheckNAdd(21);
                  break;
               case 24:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 105)
                     jjCheckNAdd(21);
                  break;
               case 26:
               case 76:
               case 82:
                  if (curChar == 101)
                     jjCheckNAdd(21);
                  break;
               case 27:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
               case 44:
                  if (curChar == 103)
                     jjCheckNAdd(21);
                  break;
               case 37:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
               case 59:
                  if (curChar == 108)
                     jjCheckNAdd(21);
                  break;
               case 40:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 45:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 51:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if (curChar == 112)
                     jjCheckNAdd(21);
                  break;
               case 54:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 115)
                     jjCheckNAdd(21);
                  break;
               case 57:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 60:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 107)
                     jjCheckNAdd(21);
                  break;
               case 63:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 99)
                     jjCheckNAdd(21);
                  break;
               case 67:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 100)
                     jjCheckNAdd(21);
                  break;
               case 73:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 77:
                  if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 83:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 85:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 88:
               case 134:
                  if (curChar == 112)
                     jjCheckNAdd(87);
                  break;
               case 90:
                  if (curChar == 97)
                     jjCheckNAdd(87);
                  break;
               case 92:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
               case 130:
                  if (curChar == 98)
                     jjCheckNAdd(87);
                  break;
               case 97:
                  if (curChar == 109)
                     jjCheckNAdd(87);
                  break;
               case 98:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 100:
                  if (curChar == 105)
                     jjCheckNAdd(87);
                  break;
               case 102:
               case 142:
                  if (curChar == 108)
                     jjCheckNAdd(87);
                  break;
               case 103:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 108:
               case 123:
                  if (curChar == 103)
                     jjCheckNAdd(87);
                  break;
               case 109:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 112:
               case 163:
               case 170:
                  if (curChar == 101)
                     jjCheckNAdd(87);
                  break;
               case 113:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 124:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 131:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 135:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 138:
                  if (curChar == 115)
                     jjCheckNAdd(87);
                  break;
               case 139:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 143:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 146:
                  if (curChar == 107)
                     jjCheckNAdd(87);
                  break;
               case 147:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 151:
                  if (curChar == 99)
                     jjCheckNAdd(87);
                  break;
               case 152:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 158:
                  if (curChar == 100)
                     jjCheckNAdd(87);
                  break;
               case 159:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 164:
                  if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 171:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 176:
               case 6:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAddTwoStates(5, 6);
                  break;
               case 1:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 13)
                     kind = 13;
                  jjCheckNAddStates(48, 50);
                  break;
               case 3:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjAddStates(45, 47);
                  break;
               case 8:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 14)
                     kind = 14;
                  jjCheckNAdd(8);
                  break;
               case 11:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(11, 12);
                  break;
               case 14:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(14, 12);
                  break;
               case 17:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(17, 12);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 176 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   2, 5, 13, 16, 17, 20, 10, 13, 15, 20, 22, 24, 25, 35, 38, 43, 
   49, 52, 55, 58, 61, 65, 71, 75, 81, 86, 89, 91, 94, 96, 99, 101, 
   107, 111, 122, 129, 133, 137, 141, 145, 150, 157, 162, 169, 175, 2, 3, 4, 
   5, 6, 8, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 32:
         return ((jjbitVec0[i2] & l2) != 0L);
      default :
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec3[i2] & l2) != 0L);
      default :
         if ((jjbitVec1[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "REQUIRED_TEXT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 
};
static final long[] jjtoToken = {
   0x7c0dL, 
};
static final long[] jjtoSkip = {
   0x3f2L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[176];
private final int[] jjstateSet = new int[352];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public MyNewGrammarTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public MyNewGrammarTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 176; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       if (jjmatchedPos == 0 && jjmatchedKind > 1)
       {
          jjmatchedKind = 1;
       }
       break;
     case 1:
       try { input_stream.backup(0);
          while (curChar <= 12 && (0x1600L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 2 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    TagNestingDepth = 1;
         break;
      case 10 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
     TagNestingDepth +=1;
         break;
      case 11 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    TagNestingDepth -=1;
    SwitchTo(TagNestingDepth == 0 ? DEFAULT : REQUIRED_TEXT);
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
